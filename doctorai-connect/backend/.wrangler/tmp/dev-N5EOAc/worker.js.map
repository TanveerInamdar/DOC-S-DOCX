{
  "version": 3,
  "sources": ["../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/matcher.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/helper/cookie/index.js", "../../../src/worker.js", "../../../../../../../Users/inamd/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../Users/inamd/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-jL1uvH/middleware-insertion-facade.js", "../../../../../../../Users/inamd/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-jL1uvH/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\HackTXD2\\PAKT\\doctorai-connect\\backend\\.wrangler\\tmp\\dev-N5EOAc",
  "sourcesContent": ["// src/compose.ts\r\nvar compose = (middleware, onError, onNotFound) => {\r\n  return (context, next) => {\r\n    let index = -1;\r\n    return dispatch(0);\r\n    async function dispatch(i) {\r\n      if (i <= index) {\r\n        throw new Error(\"next() called multiple times\");\r\n      }\r\n      index = i;\r\n      let res;\r\n      let isError = false;\r\n      let handler;\r\n      if (middleware[i]) {\r\n        handler = middleware[i][0][0];\r\n        context.req.routeIndex = i;\r\n      } else {\r\n        handler = i === middleware.length && next || void 0;\r\n      }\r\n      if (handler) {\r\n        try {\r\n          res = await handler(context, () => dispatch(i + 1));\r\n        } catch (err) {\r\n          if (err instanceof Error && onError) {\r\n            context.error = err;\r\n            res = await onError(err, context);\r\n            isError = true;\r\n          } else {\r\n            throw err;\r\n          }\r\n        }\r\n      } else {\r\n        if (context.finalized === false && onNotFound) {\r\n          res = await onNotFound(context);\r\n        }\r\n      }\r\n      if (res && (context.finalized === false || isError)) {\r\n        context.res = res;\r\n      }\r\n      return context;\r\n    }\r\n  };\r\n};\r\nexport {\r\n  compose\r\n};\r\n", "// src/request/constants.ts\r\nvar GET_MATCH_RESULT = Symbol();\r\nexport {\r\n  GET_MATCH_RESULT\r\n};\r\n", "// src/utils/body.ts\r\nimport { HonoRequest } from \"../request.js\";\r\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\r\n  const { all = false, dot = false } = options;\r\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\r\n  const contentType = headers.get(\"Content-Type\");\r\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\r\n    return parseFormData(request, { all, dot });\r\n  }\r\n  return {};\r\n};\r\nasync function parseFormData(request, options) {\r\n  const formData = await request.formData();\r\n  if (formData) {\r\n    return convertFormDataToBodyData(formData, options);\r\n  }\r\n  return {};\r\n}\r\nfunction convertFormDataToBodyData(formData, options) {\r\n  const form = /* @__PURE__ */ Object.create(null);\r\n  formData.forEach((value, key) => {\r\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\r\n    if (!shouldParseAllValues) {\r\n      form[key] = value;\r\n    } else {\r\n      handleParsingAllValues(form, key, value);\r\n    }\r\n  });\r\n  if (options.dot) {\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      const shouldParseDotValues = key.includes(\".\");\r\n      if (shouldParseDotValues) {\r\n        handleParsingNestedValues(form, key, value);\r\n        delete form[key];\r\n      }\r\n    });\r\n  }\r\n  return form;\r\n}\r\nvar handleParsingAllValues = (form, key, value) => {\r\n  if (form[key] !== void 0) {\r\n    if (Array.isArray(form[key])) {\r\n      ;\r\n      form[key].push(value);\r\n    } else {\r\n      form[key] = [form[key], value];\r\n    }\r\n  } else {\r\n    if (!key.endsWith(\"[]\")) {\r\n      form[key] = value;\r\n    } else {\r\n      form[key] = [value];\r\n    }\r\n  }\r\n};\r\nvar handleParsingNestedValues = (form, key, value) => {\r\n  let nestedForm = form;\r\n  const keys = key.split(\".\");\r\n  keys.forEach((key2, index) => {\r\n    if (index === keys.length - 1) {\r\n      nestedForm[key2] = value;\r\n    } else {\r\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\r\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\r\n      }\r\n      nestedForm = nestedForm[key2];\r\n    }\r\n  });\r\n};\r\nexport {\r\n  parseBody\r\n};\r\n", "// src/utils/url.ts\r\nvar splitPath = (path) => {\r\n  const paths = path.split(\"/\");\r\n  if (paths[0] === \"\") {\r\n    paths.shift();\r\n  }\r\n  return paths;\r\n};\r\nvar splitRoutingPath = (routePath) => {\r\n  const { groups, path } = extractGroupsFromPath(routePath);\r\n  const paths = splitPath(path);\r\n  return replaceGroupMarks(paths, groups);\r\n};\r\nvar extractGroupsFromPath = (path) => {\r\n  const groups = [];\r\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\r\n    const mark = `@${index}`;\r\n    groups.push([mark, match]);\r\n    return mark;\r\n  });\r\n  return { groups, path };\r\n};\r\nvar replaceGroupMarks = (paths, groups) => {\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const [mark] = groups[i];\r\n    for (let j = paths.length - 1; j >= 0; j--) {\r\n      if (paths[j].includes(mark)) {\r\n        paths[j] = paths[j].replace(mark, groups[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return paths;\r\n};\r\nvar patternCache = {};\r\nvar getPattern = (label, next) => {\r\n  if (label === \"*\") {\r\n    return \"*\";\r\n  }\r\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n  if (match) {\r\n    const cacheKey = `${label}#${next}`;\r\n    if (!patternCache[cacheKey]) {\r\n      if (match[2]) {\r\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\r\n      } else {\r\n        patternCache[cacheKey] = [label, match[1], true];\r\n      }\r\n    }\r\n    return patternCache[cacheKey];\r\n  }\r\n  return null;\r\n};\r\nvar tryDecode = (str, decoder) => {\r\n  try {\r\n    return decoder(str);\r\n  } catch {\r\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\r\n      try {\r\n        return decoder(match);\r\n      } catch {\r\n        return match;\r\n      }\r\n    });\r\n  }\r\n};\r\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\r\nvar getPath = (request) => {\r\n  const url = request.url;\r\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\r\n  let i = start;\r\n  for (; i < url.length; i++) {\r\n    const charCode = url.charCodeAt(i);\r\n    if (charCode === 37) {\r\n      const queryIndex = url.indexOf(\"?\", i);\r\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\r\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\r\n    } else if (charCode === 63) {\r\n      break;\r\n    }\r\n  }\r\n  return url.slice(start, i);\r\n};\r\nvar getQueryStrings = (url) => {\r\n  const queryIndex = url.indexOf(\"?\", 8);\r\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\r\n};\r\nvar getPathNoStrict = (request) => {\r\n  const result = getPath(request);\r\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\r\n};\r\nvar mergePath = (base, sub, ...rest) => {\r\n  if (rest.length) {\r\n    sub = mergePath(sub, ...rest);\r\n  }\r\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\r\n};\r\nvar checkOptionalParameter = (path) => {\r\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\r\n    return null;\r\n  }\r\n  const segments = path.split(\"/\");\r\n  const results = [];\r\n  let basePath = \"\";\r\n  segments.forEach((segment) => {\r\n    if (segment !== \"\" && !/\\:/.test(segment)) {\r\n      basePath += \"/\" + segment;\r\n    } else if (/\\:/.test(segment)) {\r\n      if (/\\?/.test(segment)) {\r\n        if (results.length === 0 && basePath === \"\") {\r\n          results.push(\"/\");\r\n        } else {\r\n          results.push(basePath);\r\n        }\r\n        const optionalSegment = segment.replace(\"?\", \"\");\r\n        basePath += \"/\" + optionalSegment;\r\n        results.push(basePath);\r\n      } else {\r\n        basePath += \"/\" + segment;\r\n      }\r\n    }\r\n  });\r\n  return results.filter((v, i, a) => a.indexOf(v) === i);\r\n};\r\nvar _decodeURI = (value) => {\r\n  if (!/[%+]/.test(value)) {\r\n    return value;\r\n  }\r\n  if (value.indexOf(\"+\") !== -1) {\r\n    value = value.replace(/\\+/g, \" \");\r\n  }\r\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\r\n};\r\nvar _getQueryParam = (url, key, multiple) => {\r\n  let encoded;\r\n  if (!multiple && key && !/[%+]/.test(key)) {\r\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\r\n    if (keyIndex2 === -1) {\r\n      keyIndex2 = url.indexOf(`&${key}`, 8);\r\n    }\r\n    while (keyIndex2 !== -1) {\r\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\r\n      if (trailingKeyCode === 61) {\r\n        const valueIndex = keyIndex2 + key.length + 2;\r\n        const endIndex = url.indexOf(\"&\", valueIndex);\r\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\r\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\r\n        return \"\";\r\n      }\r\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\r\n    }\r\n    encoded = /[%+]/.test(url);\r\n    if (!encoded) {\r\n      return void 0;\r\n    }\r\n  }\r\n  const results = {};\r\n  encoded ??= /[%+]/.test(url);\r\n  let keyIndex = url.indexOf(\"?\", 8);\r\n  while (keyIndex !== -1) {\r\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\r\n    let valueIndex = url.indexOf(\"=\", keyIndex);\r\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\r\n      valueIndex = -1;\r\n    }\r\n    let name = url.slice(\r\n      keyIndex + 1,\r\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\r\n    );\r\n    if (encoded) {\r\n      name = _decodeURI(name);\r\n    }\r\n    keyIndex = nextKeyIndex;\r\n    if (name === \"\") {\r\n      continue;\r\n    }\r\n    let value;\r\n    if (valueIndex === -1) {\r\n      value = \"\";\r\n    } else {\r\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\r\n      if (encoded) {\r\n        value = _decodeURI(value);\r\n      }\r\n    }\r\n    if (multiple) {\r\n      if (!(results[name] && Array.isArray(results[name]))) {\r\n        results[name] = [];\r\n      }\r\n      ;\r\n      results[name].push(value);\r\n    } else {\r\n      results[name] ??= value;\r\n    }\r\n  }\r\n  return key ? results[key] : results;\r\n};\r\nvar getQueryParam = _getQueryParam;\r\nvar getQueryParams = (url, key) => {\r\n  return _getQueryParam(url, key, true);\r\n};\r\nvar decodeURIComponent_ = decodeURIComponent;\r\nexport {\r\n  checkOptionalParameter,\r\n  decodeURIComponent_,\r\n  getPath,\r\n  getPathNoStrict,\r\n  getPattern,\r\n  getQueryParam,\r\n  getQueryParams,\r\n  getQueryStrings,\r\n  mergePath,\r\n  splitPath,\r\n  splitRoutingPath,\r\n  tryDecode\r\n};\r\n", "// src/request.ts\r\nimport { HTTPException } from \"./http-exception.js\";\r\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\r\nimport { parseBody } from \"./utils/body.js\";\r\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\r\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\r\nvar HonoRequest = class {\r\n  raw;\r\n  #validatedData;\r\n  #matchResult;\r\n  routeIndex = 0;\r\n  path;\r\n  bodyCache = {};\r\n  constructor(request, path = \"/\", matchResult = [[]]) {\r\n    this.raw = request;\r\n    this.path = path;\r\n    this.#matchResult = matchResult;\r\n    this.#validatedData = {};\r\n  }\r\n  param(key) {\r\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\r\n  }\r\n  #getDecodedParam(key) {\r\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\r\n    const param = this.#getParamValue(paramKey);\r\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\r\n  }\r\n  #getAllDecodedParams() {\r\n    const decoded = {};\r\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\r\n    for (const key of keys) {\r\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\r\n      if (value !== void 0) {\r\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\r\n      }\r\n    }\r\n    return decoded;\r\n  }\r\n  #getParamValue(paramKey) {\r\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\r\n  }\r\n  query(key) {\r\n    return getQueryParam(this.url, key);\r\n  }\r\n  queries(key) {\r\n    return getQueryParams(this.url, key);\r\n  }\r\n  header(name) {\r\n    if (name) {\r\n      return this.raw.headers.get(name) ?? void 0;\r\n    }\r\n    const headerData = {};\r\n    this.raw.headers.forEach((value, key) => {\r\n      headerData[key] = value;\r\n    });\r\n    return headerData;\r\n  }\r\n  async parseBody(options) {\r\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\r\n  }\r\n  #cachedBody = (key) => {\r\n    const { bodyCache, raw } = this;\r\n    const cachedBody = bodyCache[key];\r\n    if (cachedBody) {\r\n      return cachedBody;\r\n    }\r\n    const anyCachedKey = Object.keys(bodyCache)[0];\r\n    if (anyCachedKey) {\r\n      return bodyCache[anyCachedKey].then((body) => {\r\n        if (anyCachedKey === \"json\") {\r\n          body = JSON.stringify(body);\r\n        }\r\n        return new Response(body)[key]();\r\n      });\r\n    }\r\n    return bodyCache[key] = raw[key]();\r\n  };\r\n  json() {\r\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\r\n  }\r\n  text() {\r\n    return this.#cachedBody(\"text\");\r\n  }\r\n  arrayBuffer() {\r\n    return this.#cachedBody(\"arrayBuffer\");\r\n  }\r\n  blob() {\r\n    return this.#cachedBody(\"blob\");\r\n  }\r\n  formData() {\r\n    return this.#cachedBody(\"formData\");\r\n  }\r\n  addValidatedData(target, data) {\r\n    this.#validatedData[target] = data;\r\n  }\r\n  valid(target) {\r\n    return this.#validatedData[target];\r\n  }\r\n  get url() {\r\n    return this.raw.url;\r\n  }\r\n  get method() {\r\n    return this.raw.method;\r\n  }\r\n  get [GET_MATCH_RESULT]() {\r\n    return this.#matchResult;\r\n  }\r\n  get matchedRoutes() {\r\n    return this.#matchResult[0].map(([[, route]]) => route);\r\n  }\r\n  get routePath() {\r\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\r\n  }\r\n};\r\nvar cloneRawRequest = async (req) => {\r\n  if (!req.raw.bodyUsed) {\r\n    return req.raw.clone();\r\n  }\r\n  const cacheKey = Object.keys(req.bodyCache)[0];\r\n  if (!cacheKey) {\r\n    throw new HTTPException(500, {\r\n      message: \"Cannot clone request: body was already consumed and not cached. Please use HonoRequest methods (e.g., req.json(), req.text()) instead of consuming req.raw directly.\"\r\n    });\r\n  }\r\n  const requestInit = {\r\n    body: await req[cacheKey](),\r\n    cache: req.raw.cache,\r\n    credentials: req.raw.credentials,\r\n    headers: req.header(),\r\n    integrity: req.raw.integrity,\r\n    keepalive: req.raw.keepalive,\r\n    method: req.method,\r\n    mode: req.raw.mode,\r\n    redirect: req.raw.redirect,\r\n    referrer: req.raw.referrer,\r\n    referrerPolicy: req.raw.referrerPolicy,\r\n    signal: req.raw.signal\r\n  };\r\n  return new Request(req.url, requestInit);\r\n};\r\nexport {\r\n  HonoRequest,\r\n  cloneRawRequest\r\n};\r\n", "// src/utils/html.ts\r\nvar HtmlEscapedCallbackPhase = {\r\n  Stringify: 1,\r\n  BeforeStream: 2,\r\n  Stream: 3\r\n};\r\nvar raw = (value, callbacks) => {\r\n  const escapedString = new String(value);\r\n  escapedString.isEscaped = true;\r\n  escapedString.callbacks = callbacks;\r\n  return escapedString;\r\n};\r\nvar escapeRe = /[&<>'\"]/;\r\nvar stringBufferToString = async (buffer, callbacks) => {\r\n  let str = \"\";\r\n  callbacks ||= [];\r\n  const resolvedBuffer = await Promise.all(buffer);\r\n  for (let i = resolvedBuffer.length - 1; ; i--) {\r\n    str += resolvedBuffer[i];\r\n    i--;\r\n    if (i < 0) {\r\n      break;\r\n    }\r\n    let r = resolvedBuffer[i];\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    const isEscaped = r.isEscaped;\r\n    r = await (typeof r === \"object\" ? r.toString() : r);\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    if (r.isEscaped ?? isEscaped) {\r\n      str += r;\r\n    } else {\r\n      const buf = [str];\r\n      escapeToBuffer(r, buf);\r\n      str = buf[0];\r\n    }\r\n  }\r\n  return raw(str, callbacks);\r\n};\r\nvar escapeToBuffer = (str, buffer) => {\r\n  const match = str.search(escapeRe);\r\n  if (match === -1) {\r\n    buffer[0] += str;\r\n    return;\r\n  }\r\n  let escape;\r\n  let index;\r\n  let lastIndex = 0;\r\n  for (index = match; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34:\r\n        escape = \"&quot;\";\r\n        break;\r\n      case 39:\r\n        escape = \"&#39;\";\r\n        break;\r\n      case 38:\r\n        escape = \"&amp;\";\r\n        break;\r\n      case 60:\r\n        escape = \"&lt;\";\r\n        break;\r\n      case 62:\r\n        escape = \"&gt;\";\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n    buffer[0] += str.substring(lastIndex, index) + escape;\r\n    lastIndex = index + 1;\r\n  }\r\n  buffer[0] += str.substring(lastIndex, index);\r\n};\r\nvar resolveCallbackSync = (str) => {\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return str;\r\n  }\r\n  const buffer = [str];\r\n  const context = {};\r\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\r\n  return buffer[0];\r\n};\r\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\r\n  if (typeof str === \"object\" && !(str instanceof String)) {\r\n    if (!(str instanceof Promise)) {\r\n      str = str.toString();\r\n    }\r\n    if (str instanceof Promise) {\r\n      str = await str;\r\n    }\r\n  }\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return Promise.resolve(str);\r\n  }\r\n  if (buffer) {\r\n    buffer[0] += str;\r\n  } else {\r\n    buffer = [str];\r\n  }\r\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\r\n    (res) => Promise.all(\r\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\r\n    ).then(() => buffer[0])\r\n  );\r\n  if (preserveCallbacks) {\r\n    return raw(await resStr, callbacks);\r\n  } else {\r\n    return resStr;\r\n  }\r\n};\r\nexport {\r\n  HtmlEscapedCallbackPhase,\r\n  escapeToBuffer,\r\n  raw,\r\n  resolveCallback,\r\n  resolveCallbackSync,\r\n  stringBufferToString\r\n};\r\n", "// src/context.ts\r\nimport { HonoRequest } from \"./request.js\";\r\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\r\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\r\nvar setDefaultContentType = (contentType, headers) => {\r\n  return {\r\n    \"Content-Type\": contentType,\r\n    ...headers\r\n  };\r\n};\r\nvar Context = class {\r\n  #rawRequest;\r\n  #req;\r\n  env = {};\r\n  #var;\r\n  finalized = false;\r\n  error;\r\n  #status;\r\n  #executionCtx;\r\n  #res;\r\n  #layout;\r\n  #renderer;\r\n  #notFoundHandler;\r\n  #preparedHeaders;\r\n  #matchResult;\r\n  #path;\r\n  constructor(req, options) {\r\n    this.#rawRequest = req;\r\n    if (options) {\r\n      this.#executionCtx = options.executionCtx;\r\n      this.env = options.env;\r\n      this.#notFoundHandler = options.notFoundHandler;\r\n      this.#path = options.path;\r\n      this.#matchResult = options.matchResult;\r\n    }\r\n  }\r\n  get req() {\r\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\r\n    return this.#req;\r\n  }\r\n  get event() {\r\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no FetchEvent\");\r\n    }\r\n  }\r\n  get executionCtx() {\r\n    if (this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no ExecutionContext\");\r\n    }\r\n  }\r\n  get res() {\r\n    return this.#res ||= new Response(null, {\r\n      headers: this.#preparedHeaders ??= new Headers()\r\n    });\r\n  }\r\n  set res(_res) {\r\n    if (this.#res && _res) {\r\n      _res = new Response(_res.body, _res);\r\n      for (const [k, v] of this.#res.headers.entries()) {\r\n        if (k === \"content-type\") {\r\n          continue;\r\n        }\r\n        if (k === \"set-cookie\") {\r\n          const cookies = this.#res.headers.getSetCookie();\r\n          _res.headers.delete(\"set-cookie\");\r\n          for (const cookie of cookies) {\r\n            _res.headers.append(\"set-cookie\", cookie);\r\n          }\r\n        } else {\r\n          _res.headers.set(k, v);\r\n        }\r\n      }\r\n    }\r\n    this.#res = _res;\r\n    this.finalized = true;\r\n  }\r\n  render = (...args) => {\r\n    this.#renderer ??= (content) => this.html(content);\r\n    return this.#renderer(...args);\r\n  };\r\n  setLayout = (layout) => this.#layout = layout;\r\n  getLayout = () => this.#layout;\r\n  setRenderer = (renderer) => {\r\n    this.#renderer = renderer;\r\n  };\r\n  header = (name, value, options) => {\r\n    if (this.finalized) {\r\n      this.#res = new Response(this.#res.body, this.#res);\r\n    }\r\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\r\n    if (value === void 0) {\r\n      headers.delete(name);\r\n    } else if (options?.append) {\r\n      headers.append(name, value);\r\n    } else {\r\n      headers.set(name, value);\r\n    }\r\n  };\r\n  status = (status) => {\r\n    this.#status = status;\r\n  };\r\n  set = (key, value) => {\r\n    this.#var ??= /* @__PURE__ */ new Map();\r\n    this.#var.set(key, value);\r\n  };\r\n  get = (key) => {\r\n    return this.#var ? this.#var.get(key) : void 0;\r\n  };\r\n  get var() {\r\n    if (!this.#var) {\r\n      return {};\r\n    }\r\n    return Object.fromEntries(this.#var);\r\n  }\r\n  #newResponse(data, arg, headers) {\r\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\r\n    if (typeof arg === \"object\" && \"headers\" in arg) {\r\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\r\n      for (const [key, value] of argHeaders) {\r\n        if (key.toLowerCase() === \"set-cookie\") {\r\n          responseHeaders.append(key, value);\r\n        } else {\r\n          responseHeaders.set(key, value);\r\n        }\r\n      }\r\n    }\r\n    if (headers) {\r\n      for (const [k, v] of Object.entries(headers)) {\r\n        if (typeof v === \"string\") {\r\n          responseHeaders.set(k, v);\r\n        } else {\r\n          responseHeaders.delete(k);\r\n          for (const v2 of v) {\r\n            responseHeaders.append(k, v2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\r\n    return new Response(data, { status, headers: responseHeaders });\r\n  }\r\n  newResponse = (...args) => this.#newResponse(...args);\r\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\r\n  text = (text, arg, headers) => {\r\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\r\n      text,\r\n      arg,\r\n      setDefaultContentType(TEXT_PLAIN, headers)\r\n    );\r\n  };\r\n  json = (object, arg, headers) => {\r\n    return this.#newResponse(\r\n      JSON.stringify(object),\r\n      arg,\r\n      setDefaultContentType(\"application/json\", headers)\r\n    );\r\n  };\r\n  html = (html, arg, headers) => {\r\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\r\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\r\n  };\r\n  redirect = (location, status) => {\r\n    const locationString = String(location);\r\n    this.header(\r\n      \"Location\",\r\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\r\n    );\r\n    return this.newResponse(null, status ?? 302);\r\n  };\r\n  notFound = () => {\r\n    this.#notFoundHandler ??= () => new Response();\r\n    return this.#notFoundHandler(this);\r\n  };\r\n};\r\nexport {\r\n  Context,\r\n  TEXT_PLAIN\r\n};\r\n", "// src/router.ts\r\nvar METHOD_NAME_ALL = \"ALL\";\r\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\r\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\r\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\r\nvar UnsupportedPathError = class extends Error {\r\n};\r\nexport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHODS,\r\n  METHOD_NAME_ALL,\r\n  METHOD_NAME_ALL_LOWERCASE,\r\n  UnsupportedPathError\r\n};\r\n", "// src/utils/constants.ts\r\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\r\nexport {\r\n  COMPOSED_HANDLER\r\n};\r\n", "// src/hono-base.ts\r\nimport { compose } from \"./compose.js\";\r\nimport { Context } from \"./context.js\";\r\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\r\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\r\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\r\nvar notFoundHandler = (c) => {\r\n  return c.text(\"404 Not Found\", 404);\r\n};\r\nvar errorHandler = (err, c) => {\r\n  if (\"getResponse\" in err) {\r\n    const res = err.getResponse();\r\n    return c.newResponse(res.body, res);\r\n  }\r\n  console.error(err);\r\n  return c.text(\"Internal Server Error\", 500);\r\n};\r\nvar Hono = class {\r\n  get;\r\n  post;\r\n  put;\r\n  delete;\r\n  options;\r\n  patch;\r\n  all;\r\n  on;\r\n  use;\r\n  router;\r\n  getPath;\r\n  _basePath = \"/\";\r\n  #path = \"/\";\r\n  routes = [];\r\n  constructor(options = {}) {\r\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\r\n    allMethods.forEach((method) => {\r\n      this[method] = (args1, ...args) => {\r\n        if (typeof args1 === \"string\") {\r\n          this.#path = args1;\r\n        } else {\r\n          this.#addRoute(method, this.#path, args1);\r\n        }\r\n        args.forEach((handler) => {\r\n          this.#addRoute(method, this.#path, handler);\r\n        });\r\n        return this;\r\n      };\r\n    });\r\n    this.on = (method, path, ...handlers) => {\r\n      for (const p of [path].flat()) {\r\n        this.#path = p;\r\n        for (const m of [method].flat()) {\r\n          handlers.map((handler) => {\r\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\r\n          });\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n    this.use = (arg1, ...handlers) => {\r\n      if (typeof arg1 === \"string\") {\r\n        this.#path = arg1;\r\n      } else {\r\n        this.#path = \"*\";\r\n        handlers.unshift(arg1);\r\n      }\r\n      handlers.forEach((handler) => {\r\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\r\n      });\r\n      return this;\r\n    };\r\n    const { strict, ...optionsWithoutStrict } = options;\r\n    Object.assign(this, optionsWithoutStrict);\r\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\r\n  }\r\n  #clone() {\r\n    const clone = new Hono({\r\n      router: this.router,\r\n      getPath: this.getPath\r\n    });\r\n    clone.errorHandler = this.errorHandler;\r\n    clone.#notFoundHandler = this.#notFoundHandler;\r\n    clone.routes = this.routes;\r\n    return clone;\r\n  }\r\n  #notFoundHandler = notFoundHandler;\r\n  errorHandler = errorHandler;\r\n  route(path, app) {\r\n    const subApp = this.basePath(path);\r\n    app.routes.map((r) => {\r\n      let handler;\r\n      if (app.errorHandler === errorHandler) {\r\n        handler = r.handler;\r\n      } else {\r\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\r\n        handler[COMPOSED_HANDLER] = r.handler;\r\n      }\r\n      subApp.#addRoute(r.method, r.path, handler);\r\n    });\r\n    return this;\r\n  }\r\n  basePath(path) {\r\n    const subApp = this.#clone();\r\n    subApp._basePath = mergePath(this._basePath, path);\r\n    return subApp;\r\n  }\r\n  onError = (handler) => {\r\n    this.errorHandler = handler;\r\n    return this;\r\n  };\r\n  notFound = (handler) => {\r\n    this.#notFoundHandler = handler;\r\n    return this;\r\n  };\r\n  mount(path, applicationHandler, options) {\r\n    let replaceRequest;\r\n    let optionHandler;\r\n    if (options) {\r\n      if (typeof options === \"function\") {\r\n        optionHandler = options;\r\n      } else {\r\n        optionHandler = options.optionHandler;\r\n        if (options.replaceRequest === false) {\r\n          replaceRequest = (request) => request;\r\n        } else {\r\n          replaceRequest = options.replaceRequest;\r\n        }\r\n      }\r\n    }\r\n    const getOptions = optionHandler ? (c) => {\r\n      const options2 = optionHandler(c);\r\n      return Array.isArray(options2) ? options2 : [options2];\r\n    } : (c) => {\r\n      let executionContext = void 0;\r\n      try {\r\n        executionContext = c.executionCtx;\r\n      } catch {\r\n      }\r\n      return [c.env, executionContext];\r\n    };\r\n    replaceRequest ||= (() => {\r\n      const mergedPath = mergePath(this._basePath, path);\r\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\r\n      return (request) => {\r\n        const url = new URL(request.url);\r\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\r\n        return new Request(url, request);\r\n      };\r\n    })();\r\n    const handler = async (c, next) => {\r\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\r\n      if (res) {\r\n        return res;\r\n      }\r\n      await next();\r\n    };\r\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\r\n    return this;\r\n  }\r\n  #addRoute(method, path, handler) {\r\n    method = method.toUpperCase();\r\n    path = mergePath(this._basePath, path);\r\n    const r = { basePath: this._basePath, path, method, handler };\r\n    this.router.add(method, path, [handler, r]);\r\n    this.routes.push(r);\r\n  }\r\n  #handleError(err, c) {\r\n    if (err instanceof Error) {\r\n      return this.errorHandler(err, c);\r\n    }\r\n    throw err;\r\n  }\r\n  #dispatch(request, executionCtx, env, method) {\r\n    if (method === \"HEAD\") {\r\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\r\n    }\r\n    const path = this.getPath(request, { env });\r\n    const matchResult = this.router.match(method, path);\r\n    const c = new Context(request, {\r\n      path,\r\n      matchResult,\r\n      env,\r\n      executionCtx,\r\n      notFoundHandler: this.#notFoundHandler\r\n    });\r\n    if (matchResult[0].length === 1) {\r\n      let res;\r\n      try {\r\n        res = matchResult[0][0][0][0](c, async () => {\r\n          c.res = await this.#notFoundHandler(c);\r\n        });\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n      return res instanceof Promise ? res.then(\r\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\r\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\r\n    }\r\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\r\n    return (async () => {\r\n      try {\r\n        const context = await composed(c);\r\n        if (!context.finalized) {\r\n          throw new Error(\r\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\r\n          );\r\n        }\r\n        return context.res;\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n    })();\r\n  }\r\n  fetch = (request, ...rest) => {\r\n    return this.#dispatch(request, rest[1], rest[0], request.method);\r\n  };\r\n  request = (input, requestInit, Env, executionCtx) => {\r\n    if (input instanceof Request) {\r\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\r\n    }\r\n    input = input.toString();\r\n    return this.fetch(\r\n      new Request(\r\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\r\n        requestInit\r\n      ),\r\n      Env,\r\n      executionCtx\r\n    );\r\n  };\r\n  fire = () => {\r\n    addEventListener(\"fetch\", (event) => {\r\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\r\n    });\r\n  };\r\n};\r\nexport {\r\n  Hono as HonoBase\r\n};\r\n", "// src/router/reg-exp-router/matcher.ts\r\nimport { METHOD_NAME_ALL } from \"../../router.js\";\r\nvar emptyParam = [];\r\nfunction match(method, path) {\r\n  const matchers = this.buildAllMatchers();\r\n  const match2 = (method2, path2) => {\r\n    const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\r\n    const staticMatch = matcher[2][path2];\r\n    if (staticMatch) {\r\n      return staticMatch;\r\n    }\r\n    const match3 = path2.match(matcher[0]);\r\n    if (!match3) {\r\n      return [[], emptyParam];\r\n    }\r\n    const index = match3.indexOf(\"\", 1);\r\n    return [matcher[1][index], match3];\r\n  };\r\n  this.match = match2;\r\n  return match2(method, path);\r\n}\r\nexport {\r\n  emptyParam,\r\n  match\r\n};\r\n", "// src/router/reg-exp-router/node.ts\r\nvar LABEL_REG_EXP_STR = \"[^/]+\";\r\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\r\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\r\nvar PATH_ERROR = Symbol();\r\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\r\nfunction compareKey(a, b) {\r\n  if (a.length === 1) {\r\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\r\n  }\r\n  if (b.length === 1) {\r\n    return 1;\r\n  }\r\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  if (a === LABEL_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === LABEL_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\r\n}\r\nvar Node = class {\r\n  #index;\r\n  #varIndex;\r\n  #children = /* @__PURE__ */ Object.create(null);\r\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\r\n    if (tokens.length === 0) {\r\n      if (this.#index !== void 0) {\r\n        throw PATH_ERROR;\r\n      }\r\n      if (pathErrorCheckOnly) {\r\n        return;\r\n      }\r\n      this.#index = index;\r\n      return;\r\n    }\r\n    const [token, ...restTokens] = tokens;\r\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n    let node;\r\n    if (pattern) {\r\n      const name = pattern[1];\r\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\r\n      if (name && pattern[2]) {\r\n        if (regexpStr === \".*\") {\r\n          throw PATH_ERROR;\r\n        }\r\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\r\n        if (/\\((?!\\?:)/.test(regexpStr)) {\r\n          throw PATH_ERROR;\r\n        }\r\n      }\r\n      node = this.#children[regexpStr];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[regexpStr] = new Node();\r\n        if (name !== \"\") {\r\n          node.#varIndex = context.varIndex++;\r\n        }\r\n      }\r\n      if (!pathErrorCheckOnly && name !== \"\") {\r\n        paramMap.push([name, node.#varIndex]);\r\n      }\r\n    } else {\r\n      node = this.#children[token];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[token] = new Node();\r\n      }\r\n    }\r\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\r\n  }\r\n  buildRegExpStr() {\r\n    const childKeys = Object.keys(this.#children).sort(compareKey);\r\n    const strList = childKeys.map((k) => {\r\n      const c = this.#children[k];\r\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\r\n    });\r\n    if (typeof this.#index === \"number\") {\r\n      strList.unshift(`#${this.#index}`);\r\n    }\r\n    if (strList.length === 0) {\r\n      return \"\";\r\n    }\r\n    if (strList.length === 1) {\r\n      return strList[0];\r\n    }\r\n    return \"(?:\" + strList.join(\"|\") + \")\";\r\n  }\r\n};\r\nexport {\r\n  Node,\r\n  PATH_ERROR\r\n};\r\n", "// src/router/reg-exp-router/trie.ts\r\nimport { Node } from \"./node.js\";\r\nvar Trie = class {\r\n  #context = { varIndex: 0 };\r\n  #root = new Node();\r\n  insert(path, index, pathErrorCheckOnly) {\r\n    const paramAssoc = [];\r\n    const groups = [];\r\n    for (let i = 0; ; ) {\r\n      let replaced = false;\r\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\r\n        const mark = `@\\\\${i}`;\r\n        groups[i] = [mark, m];\r\n        i++;\r\n        replaced = true;\r\n        return mark;\r\n      });\r\n      if (!replaced) {\r\n        break;\r\n      }\r\n    }\r\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\r\n    for (let i = groups.length - 1; i >= 0; i--) {\r\n      const [mark] = groups[i];\r\n      for (let j = tokens.length - 1; j >= 0; j--) {\r\n        if (tokens[j].indexOf(mark) !== -1) {\r\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\r\n    return paramAssoc;\r\n  }\r\n  buildRegExp() {\r\n    let regexp = this.#root.buildRegExpStr();\r\n    if (regexp === \"\") {\r\n      return [/^$/, [], []];\r\n    }\r\n    let captureIndex = 0;\r\n    const indexReplacementMap = [];\r\n    const paramReplacementMap = [];\r\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\r\n      if (handlerIndex !== void 0) {\r\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\r\n        return \"$()\";\r\n      }\r\n      if (paramIndex !== void 0) {\r\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\r\n        return \"\";\r\n      }\r\n      return \"\";\r\n    });\r\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\r\n  }\r\n};\r\nexport {\r\n  Trie\r\n};\r\n", "// src/router/reg-exp-router/router.ts\r\nimport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHOD_NAME_ALL,\r\n  UnsupportedPathError\r\n} from \"../../router.js\";\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { match, emptyParam } from \"./matcher.js\";\r\nimport { PATH_ERROR } from \"./node.js\";\r\nimport { Trie } from \"./trie.js\";\r\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\r\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\nfunction buildWildcardRegExp(path) {\r\n  return wildcardRegExpCache[path] ??= new RegExp(\r\n    path === \"*\" ? \"\" : `^${path.replace(\r\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\r\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\r\n    )}$`\r\n  );\r\n}\r\nfunction clearWildcardRegExpCache() {\r\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\n}\r\nfunction buildMatcherFromPreprocessedRoutes(routes) {\r\n  const trie = new Trie();\r\n  const handlerData = [];\r\n  if (routes.length === 0) {\r\n    return nullMatcher;\r\n  }\r\n  const routesWithStaticPathFlag = routes.map(\r\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\r\n  ).sort(\r\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\r\n  );\r\n  const staticMap = /* @__PURE__ */ Object.create(null);\r\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\r\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\r\n    if (pathErrorCheckOnly) {\r\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\r\n    } else {\r\n      j++;\r\n    }\r\n    let paramAssoc;\r\n    try {\r\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\r\n    } catch (e) {\r\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\r\n    }\r\n    if (pathErrorCheckOnly) {\r\n      continue;\r\n    }\r\n    handlerData[j] = handlers.map(([h, paramCount]) => {\r\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\r\n      paramCount -= 1;\r\n      for (; paramCount >= 0; paramCount--) {\r\n        const [key, value] = paramAssoc[paramCount];\r\n        paramIndexMap[key] = value;\r\n      }\r\n      return [h, paramIndexMap];\r\n    });\r\n  }\r\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\r\n  for (let i = 0, len = handlerData.length; i < len; i++) {\r\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\r\n      const map = handlerData[i][j]?.[1];\r\n      if (!map) {\r\n        continue;\r\n      }\r\n      const keys = Object.keys(map);\r\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\r\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\r\n      }\r\n    }\r\n  }\r\n  const handlerMap = [];\r\n  for (const i in indexReplacementMap) {\r\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\r\n  }\r\n  return [regexp, handlerMap, staticMap];\r\n}\r\nfunction findMiddleware(middleware, path) {\r\n  if (!middleware) {\r\n    return void 0;\r\n  }\r\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\r\n    if (buildWildcardRegExp(k).test(path)) {\r\n      return [...middleware[k]];\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nvar RegExpRouter = class {\r\n  name = \"RegExpRouter\";\r\n  #middleware;\r\n  #routes;\r\n  constructor() {\r\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n  }\r\n  add(method, path, handler) {\r\n    const middleware = this.#middleware;\r\n    const routes = this.#routes;\r\n    if (!middleware || !routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    if (!middleware[method]) {\r\n      ;\r\n      [middleware, routes].forEach((handlerMap) => {\r\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\r\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\r\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\r\n        });\r\n      });\r\n    }\r\n    if (path === \"/*\") {\r\n      path = \"*\";\r\n    }\r\n    const paramCount = (path.match(/\\/:/g) || []).length;\r\n    if (/\\*$/.test(path)) {\r\n      const re = buildWildcardRegExp(path);\r\n      if (method === METHOD_NAME_ALL) {\r\n        Object.keys(middleware).forEach((m) => {\r\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n        });\r\n      } else {\r\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n      }\r\n      Object.keys(middleware).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(middleware[m]).forEach((p) => {\r\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\r\n          });\r\n        }\r\n      });\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(routes[m]).forEach(\r\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\r\n          );\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const paths = checkOptionalParameter(path) || [path];\r\n    for (let i = 0, len = paths.length; i < len; i++) {\r\n      const path2 = paths[i];\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          routes[m][path2] ||= [\r\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\r\n          ];\r\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  match = match;\r\n  buildAllMatchers() {\r\n    const matchers = /* @__PURE__ */ Object.create(null);\r\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\r\n      matchers[method] ||= this.#buildMatcher(method);\r\n    });\r\n    this.#middleware = this.#routes = void 0;\r\n    clearWildcardRegExpCache();\r\n    return matchers;\r\n  }\r\n  #buildMatcher(method) {\r\n    const routes = [];\r\n    let hasOwnRoute = method === METHOD_NAME_ALL;\r\n    [this.#middleware, this.#routes].forEach((r) => {\r\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\r\n      if (ownRoute.length !== 0) {\r\n        hasOwnRoute ||= true;\r\n        routes.push(...ownRoute);\r\n      } else if (method !== METHOD_NAME_ALL) {\r\n        routes.push(\r\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\r\n        );\r\n      }\r\n    });\r\n    if (!hasOwnRoute) {\r\n      return null;\r\n    } else {\r\n      return buildMatcherFromPreprocessedRoutes(routes);\r\n    }\r\n  }\r\n};\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/smart-router/router.ts\r\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\r\nvar SmartRouter = class {\r\n  name = \"SmartRouter\";\r\n  #routers = [];\r\n  #routes = [];\r\n  constructor(init) {\r\n    this.#routers = init.routers;\r\n  }\r\n  add(method, path, handler) {\r\n    if (!this.#routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    this.#routes.push([method, path, handler]);\r\n  }\r\n  match(method, path) {\r\n    if (!this.#routes) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    const routers = this.#routers;\r\n    const routes = this.#routes;\r\n    const len = routers.length;\r\n    let i = 0;\r\n    let res;\r\n    for (; i < len; i++) {\r\n      const router = routers[i];\r\n      try {\r\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\r\n          router.add(...routes[i2]);\r\n        }\r\n        res = router.match(method, path);\r\n      } catch (e) {\r\n        if (e instanceof UnsupportedPathError) {\r\n          continue;\r\n        }\r\n        throw e;\r\n      }\r\n      this.match = router.match.bind(router);\r\n      this.#routers = [router];\r\n      this.#routes = void 0;\r\n      break;\r\n    }\r\n    if (i === len) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\r\n    return res;\r\n  }\r\n  get activeRouter() {\r\n    if (this.#routes || this.#routers.length !== 1) {\r\n      throw new Error(\"No active router has been determined yet.\");\r\n    }\r\n    return this.#routers[0];\r\n  }\r\n};\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/trie-router/node.ts\r\nimport { METHOD_NAME_ALL } from \"../../router.js\";\r\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\r\nvar emptyParams = /* @__PURE__ */ Object.create(null);\r\nvar Node = class {\r\n  #methods;\r\n  #children;\r\n  #patterns;\r\n  #order = 0;\r\n  #params = emptyParams;\r\n  constructor(method, handler, children) {\r\n    this.#children = children || /* @__PURE__ */ Object.create(null);\r\n    this.#methods = [];\r\n    if (method && handler) {\r\n      const m = /* @__PURE__ */ Object.create(null);\r\n      m[method] = { handler, possibleKeys: [], score: 0 };\r\n      this.#methods = [m];\r\n    }\r\n    this.#patterns = [];\r\n  }\r\n  insert(method, path, handler) {\r\n    this.#order = ++this.#order;\r\n    let curNode = this;\r\n    const parts = splitRoutingPath(path);\r\n    const possibleKeys = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const p = parts[i];\r\n      const nextP = parts[i + 1];\r\n      const pattern = getPattern(p, nextP);\r\n      const key = Array.isArray(pattern) ? pattern[0] : p;\r\n      if (key in curNode.#children) {\r\n        curNode = curNode.#children[key];\r\n        if (pattern) {\r\n          possibleKeys.push(pattern[1]);\r\n        }\r\n        continue;\r\n      }\r\n      curNode.#children[key] = new Node();\r\n      if (pattern) {\r\n        curNode.#patterns.push(pattern);\r\n        possibleKeys.push(pattern[1]);\r\n      }\r\n      curNode = curNode.#children[key];\r\n    }\r\n    curNode.#methods.push({\r\n      [method]: {\r\n        handler,\r\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\r\n        score: this.#order\r\n      }\r\n    });\r\n    return curNode;\r\n  }\r\n  #getHandlerSets(node, method, nodeParams, params) {\r\n    const handlerSets = [];\r\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\r\n      const m = node.#methods[i];\r\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\r\n      const processedSet = {};\r\n      if (handlerSet !== void 0) {\r\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\r\n        handlerSets.push(handlerSet);\r\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\r\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\r\n            const key = handlerSet.possibleKeys[i2];\r\n            const processed = processedSet[handlerSet.score];\r\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\r\n            processedSet[handlerSet.score] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handlerSets;\r\n  }\r\n  search(method, path) {\r\n    const handlerSets = [];\r\n    this.#params = emptyParams;\r\n    const curNode = this;\r\n    let curNodes = [curNode];\r\n    const parts = splitPath(path);\r\n    const curNodesQueue = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const part = parts[i];\r\n      const isLast = i === len - 1;\r\n      const tempNodes = [];\r\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\r\n        const node = curNodes[j];\r\n        const nextNode = node.#children[part];\r\n        if (nextNode) {\r\n          nextNode.#params = node.#params;\r\n          if (isLast) {\r\n            if (nextNode.#children[\"*\"]) {\r\n              handlerSets.push(\r\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\r\n              );\r\n            }\r\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\r\n          } else {\r\n            tempNodes.push(nextNode);\r\n          }\r\n        }\r\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\r\n          const pattern = node.#patterns[k];\r\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\r\n          if (pattern === \"*\") {\r\n            const astNode = node.#children[\"*\"];\r\n            if (astNode) {\r\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\r\n              astNode.#params = params;\r\n              tempNodes.push(astNode);\r\n            }\r\n            continue;\r\n          }\r\n          const [key, name, matcher] = pattern;\r\n          if (!part && !(matcher instanceof RegExp)) {\r\n            continue;\r\n          }\r\n          const child = node.#children[key];\r\n          const restPathString = parts.slice(i).join(\"/\");\r\n          if (matcher instanceof RegExp) {\r\n            const m = matcher.exec(restPathString);\r\n            if (m) {\r\n              params[name] = m[0];\r\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\r\n              if (Object.keys(child.#children).length) {\r\n                child.#params = params;\r\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\r\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\r\n                targetCurNodes.push(child);\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (matcher === true || matcher.test(part)) {\r\n            params[name] = part;\r\n            if (isLast) {\r\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\r\n              if (child.#children[\"*\"]) {\r\n                handlerSets.push(\r\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\r\n                );\r\n              }\r\n            } else {\r\n              child.#params = params;\r\n              tempNodes.push(child);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\r\n    }\r\n    if (handlerSets.length > 1) {\r\n      handlerSets.sort((a, b) => {\r\n        return a.score - b.score;\r\n      });\r\n    }\r\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\r\n  }\r\n};\r\nexport {\r\n  Node\r\n};\r\n", "// src/router/trie-router/router.ts\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { Node } from \"./node.js\";\r\nvar TrieRouter = class {\r\n  name = \"TrieRouter\";\r\n  #node;\r\n  constructor() {\r\n    this.#node = new Node();\r\n  }\r\n  add(method, path, handler) {\r\n    const results = checkOptionalParameter(path);\r\n    if (results) {\r\n      for (let i = 0, len = results.length; i < len; i++) {\r\n        this.#node.insert(method, results[i], handler);\r\n      }\r\n      return;\r\n    }\r\n    this.#node.insert(method, path, handler);\r\n  }\r\n  match(method, path) {\r\n    return this.#node.search(method, path);\r\n  }\r\n};\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/hono.ts\r\nimport { HonoBase } from \"./hono-base.js\";\r\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\r\nimport { SmartRouter } from \"./router/smart-router/index.js\";\r\nimport { TrieRouter } from \"./router/trie-router/index.js\";\r\nvar Hono = class extends HonoBase {\r\n  constructor(options = {}) {\r\n    super(options);\r\n    this.router = options.router ?? new SmartRouter({\r\n      routers: [new RegExpRouter(), new TrieRouter()]\r\n    });\r\n  }\r\n};\r\nexport {\r\n  Hono\r\n};\r\n", "// src/middleware/cors/index.ts\r\nvar cors = (options) => {\r\n  const defaults = {\r\n    origin: \"*\",\r\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\r\n    allowHeaders: [],\r\n    exposeHeaders: []\r\n  };\r\n  const opts = {\r\n    ...defaults,\r\n    ...options\r\n  };\r\n  const findAllowOrigin = ((optsOrigin) => {\r\n    if (typeof optsOrigin === \"string\") {\r\n      if (optsOrigin === \"*\") {\r\n        return () => optsOrigin;\r\n      } else {\r\n        return (origin) => optsOrigin === origin ? origin : null;\r\n      }\r\n    } else if (typeof optsOrigin === \"function\") {\r\n      return optsOrigin;\r\n    } else {\r\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\r\n    }\r\n  })(opts.origin);\r\n  const findAllowMethods = ((optsAllowMethods) => {\r\n    if (typeof optsAllowMethods === \"function\") {\r\n      return optsAllowMethods;\r\n    } else if (Array.isArray(optsAllowMethods)) {\r\n      return () => optsAllowMethods;\r\n    } else {\r\n      return () => [];\r\n    }\r\n  })(opts.allowMethods);\r\n  return async function cors2(c, next) {\r\n    function set(key, value) {\r\n      c.res.headers.set(key, value);\r\n    }\r\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\r\n    if (allowOrigin) {\r\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n    }\r\n    if (opts.origin !== \"*\") {\r\n      const existingVary = c.req.header(\"Vary\");\r\n      if (existingVary) {\r\n        set(\"Vary\", existingVary);\r\n      } else {\r\n        set(\"Vary\", \"Origin\");\r\n      }\r\n    }\r\n    if (opts.credentials) {\r\n      set(\"Access-Control-Allow-Credentials\", \"true\");\r\n    }\r\n    if (opts.exposeHeaders?.length) {\r\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\r\n    }\r\n    if (c.req.method === \"OPTIONS\") {\r\n      if (opts.maxAge != null) {\r\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\r\n      }\r\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\r\n      if (allowMethods.length) {\r\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\r\n      }\r\n      let headers = opts.allowHeaders;\r\n      if (!headers?.length) {\r\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\r\n        if (requestHeaders) {\r\n          headers = requestHeaders.split(/\\s*,\\s*/);\r\n        }\r\n      }\r\n      if (headers?.length) {\r\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\r\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\r\n      }\r\n      c.res.headers.delete(\"Content-Length\");\r\n      c.res.headers.delete(\"Content-Type\");\r\n      return new Response(null, {\r\n        headers: c.res.headers,\r\n        status: 204,\r\n        statusText: \"No Content\"\r\n      });\r\n    }\r\n    await next();\r\n  };\r\n};\r\nexport {\r\n  cors\r\n};\r\n", "// src/utils/cookie.ts\r\nimport { decodeURIComponent_, tryDecode } from \"./url.js\";\r\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\r\nvar getCryptoKey = async (secret) => {\r\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\r\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\r\n};\r\nvar makeSignature = async (value, secret) => {\r\n  const key = await getCryptoKey(secret);\r\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\r\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\r\n};\r\nvar verifySignature = async (base64Signature, value, secret) => {\r\n  try {\r\n    const signatureBinStr = atob(base64Signature);\r\n    const signature = new Uint8Array(signatureBinStr.length);\r\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\r\n      signature[i] = signatureBinStr.charCodeAt(i);\r\n    }\r\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\r\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\r\nvar parse = (cookie, name) => {\r\n  if (name && cookie.indexOf(name) === -1) {\r\n    return {};\r\n  }\r\n  const pairs = cookie.trim().split(\";\");\r\n  const parsedCookie = {};\r\n  for (let pairStr of pairs) {\r\n    pairStr = pairStr.trim();\r\n    const valueStartPos = pairStr.indexOf(\"=\");\r\n    if (valueStartPos === -1) {\r\n      continue;\r\n    }\r\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\r\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\r\n      continue;\r\n    }\r\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\r\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\r\n      cookieValue = cookieValue.slice(1, -1);\r\n    }\r\n    if (validCookieValueRegEx.test(cookieValue)) {\r\n      parsedCookie[cookieName] = cookieValue.indexOf(\"%\") !== -1 ? tryDecode(cookieValue, decodeURIComponent_) : cookieValue;\r\n      if (name) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar parseSigned = async (cookie, secret, name) => {\r\n  const parsedCookie = {};\r\n  const secretKey = await getCryptoKey(secret);\r\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\r\n    const signatureStartPos = value.lastIndexOf(\".\");\r\n    if (signatureStartPos < 1) {\r\n      continue;\r\n    }\r\n    const signedValue = value.substring(0, signatureStartPos);\r\n    const signature = value.substring(signatureStartPos + 1);\r\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\r\n      continue;\r\n    }\r\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\r\n    parsedCookie[key] = isVerified ? signedValue : false;\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar _serialize = (name, value, opt = {}) => {\r\n  let cookie = `${name}=${value}`;\r\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\r\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\r\n  }\r\n  if (name.startsWith(\"__Host-\")) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\r\n    }\r\n    if (opt.path !== \"/\") {\r\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\r\n    }\r\n    if (opt.domain) {\r\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\r\n    }\r\n  }\r\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\r\n    if (opt.maxAge > 3456e4) {\r\n      throw new Error(\r\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\r\n      );\r\n    }\r\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\r\n  }\r\n  if (opt.domain && opt.prefix !== \"host\") {\r\n    cookie += `; Domain=${opt.domain}`;\r\n  }\r\n  if (opt.path) {\r\n    cookie += `; Path=${opt.path}`;\r\n  }\r\n  if (opt.expires) {\r\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\r\n      throw new Error(\r\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\r\n      );\r\n    }\r\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\r\n  }\r\n  if (opt.httpOnly) {\r\n    cookie += \"; HttpOnly\";\r\n  }\r\n  if (opt.secure) {\r\n    cookie += \"; Secure\";\r\n  }\r\n  if (opt.sameSite) {\r\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\r\n  }\r\n  if (opt.priority) {\r\n    cookie += `; Priority=${opt.priority.charAt(0).toUpperCase() + opt.priority.slice(1)}`;\r\n  }\r\n  if (opt.partitioned) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\r\n    }\r\n    cookie += \"; Partitioned\";\r\n  }\r\n  return cookie;\r\n};\r\nvar serialize = (name, value, opt) => {\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nvar serializeSigned = async (name, value, secret, opt = {}) => {\r\n  const signature = await makeSignature(value, secret);\r\n  value = `${value}.${signature}`;\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nexport {\r\n  parse,\r\n  parseSigned,\r\n  serialize,\r\n  serializeSigned\r\n};\r\n", "// src/helper/cookie/index.ts\r\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\r\nvar getCookie = (c, key, prefix) => {\r\n  const cookie = c.req.raw.headers.get(\"Cookie\");\r\n  if (typeof key === \"string\") {\r\n    if (!cookie) {\r\n      return void 0;\r\n    }\r\n    let finalKey = key;\r\n    if (prefix === \"secure\") {\r\n      finalKey = \"__Secure-\" + key;\r\n    } else if (prefix === \"host\") {\r\n      finalKey = \"__Host-\" + key;\r\n    }\r\n    const obj2 = parse(cookie, finalKey);\r\n    return obj2[finalKey];\r\n  }\r\n  if (!cookie) {\r\n    return {};\r\n  }\r\n  const obj = parse(cookie);\r\n  return obj;\r\n};\r\nvar getSignedCookie = async (c, secret, key, prefix) => {\r\n  const cookie = c.req.raw.headers.get(\"Cookie\");\r\n  if (typeof key === \"string\") {\r\n    if (!cookie) {\r\n      return void 0;\r\n    }\r\n    let finalKey = key;\r\n    if (prefix === \"secure\") {\r\n      finalKey = \"__Secure-\" + key;\r\n    } else if (prefix === \"host\") {\r\n      finalKey = \"__Host-\" + key;\r\n    }\r\n    const obj2 = await parseSigned(cookie, secret, finalKey);\r\n    return obj2[finalKey];\r\n  }\r\n  if (!cookie) {\r\n    return {};\r\n  }\r\n  const obj = await parseSigned(cookie, secret);\r\n  return obj;\r\n};\r\nvar generateCookie = (name, value, opt) => {\r\n  let cookie;\r\n  if (opt?.prefix === \"secure\") {\r\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\r\n  } else if (opt?.prefix === \"host\") {\r\n    cookie = serialize(\"__Host-\" + name, value, {\r\n      ...opt,\r\n      path: \"/\",\r\n      secure: true,\r\n      domain: void 0\r\n    });\r\n  } else {\r\n    cookie = serialize(name, value, { path: \"/\", ...opt });\r\n  }\r\n  return cookie;\r\n};\r\nvar setCookie = (c, name, value, opt) => {\r\n  const cookie = generateCookie(name, value, opt);\r\n  c.header(\"Set-Cookie\", cookie, { append: true });\r\n};\r\nvar generateSignedCookie = async (name, value, secret, opt) => {\r\n  let cookie;\r\n  if (opt?.prefix === \"secure\") {\r\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\r\n      path: \"/\",\r\n      ...opt,\r\n      secure: true\r\n    });\r\n  } else if (opt?.prefix === \"host\") {\r\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\r\n      ...opt,\r\n      path: \"/\",\r\n      secure: true,\r\n      domain: void 0\r\n    });\r\n  } else {\r\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\r\n  }\r\n  return cookie;\r\n};\r\nvar setSignedCookie = async (c, name, value, secret, opt) => {\r\n  const cookie = await generateSignedCookie(name, value, secret, opt);\r\n  c.header(\"set-cookie\", cookie, { append: true });\r\n};\r\nvar deleteCookie = (c, name, opt) => {\r\n  const deletedCookie = getCookie(c, name, opt?.prefix);\r\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\r\n  return deletedCookie;\r\n};\r\nexport {\r\n  deleteCookie,\r\n  generateCookie,\r\n  generateSignedCookie,\r\n  getCookie,\r\n  getSignedCookie,\r\n  setCookie,\r\n  setSignedCookie\r\n};\r\n", "import { Hono } from 'hono'\r\nimport { cors } from 'hono/cors'\r\nimport { getCookie, setCookie, deleteCookie } from 'hono/cookie'\r\n\r\nconst app = new Hono()\r\n\r\napp.use('*', async (c, next) => {\r\n  const origins = (c.env.CORS_ORIGINS || 'http://localhost:5173,http://127.0.0.1:5173').split(',').map(s => s.trim())\r\n  return cors({ origin: origins, credentials: true })(c, next)\r\n})\r\n\r\nfunction encodeSession(data) { return btoa(JSON.stringify(data)) }\r\nfunction decodeSession(raw) { try { return raw ? JSON.parse(atob(raw)) : null } catch { return null } }\r\nasync function requireSession(c) { const s = decodeSession(getCookie(c, 'session')); if (!s) return c.json({ error: 'unauthorized' }, 401); return s }\r\nasync function isDoctor(c) { const s = decodeSession(getCookie(c, 'session')); return s && s.role === 'doctor' ? s : null }\r\n\r\napp.get('/api/health', (c) => c.json({ ok: true }))\r\n\r\napp.get('/api/debug', async (c) => {\r\n  const cookies = getCookie(c, 'session')\r\n  const session = decodeSession(cookies)\r\n  return c.json({ \r\n    hasCookie: !!cookies,\r\n    session: session,\r\n    headers: {\r\n      origin: c.req.header('Origin'),\r\n      cookie: c.req.header('Cookie')\r\n    }\r\n  })\r\n})\r\n\r\napp.post('/api/login', async (c) => {\r\n  const { email, password } = await c.req.json().catch(() => ({}))\r\n  if (!email || !password) return c.json({ error: 'email and password required' }, 400)\r\n  const user = await c.env.DB.prepare('SELECT id, email, password_plain, role, name FROM users WHERE email = ?').bind(email).first()\r\n  if (!user || user.password_plain !== password) return c.json({ error: 'invalid credentials' }, 401)\r\n\r\n  let patientId = null, doctorId = null\r\n  if (user.role === 'patient') {\r\n    const p = await c.env.DB.prepare('SELECT id FROM patients WHERE user_id = ?').bind(user.id).first()\r\n    patientId = p?.id ?? null\r\n  } else {\r\n    const d = await c.env.DB.prepare('SELECT id FROM doctors WHERE user_id = ?').bind(user.id).first()\r\n    doctorId = d?.id ?? null\r\n  }\r\n  const session = { userId: user.id, role: user.role, patientId, doctorId, name: user.name, email: user.email }\r\n  setCookie(c, 'session', encodeSession(session), { \r\n    httpOnly: false,  // Allow JavaScript to read it\r\n    sameSite: 'Lax', \r\n    path: '/',\r\n    maxAge: 60 * 60 * 24 // 24 hours\r\n  })\r\n  return c.json({ ok: true, user: { id: user.id, role: user.role, name: user.name, email: user.email, patientId, doctorId } })\r\n})\r\n\r\napp.post('/api/signup', async (c) => {\r\n  const { email, password, name, role, fullName, dob, specialization, doctorId } = await c.req.json().catch(() => ({}))\r\n  \r\n  if (!email || !password || !name || !role) {\r\n    return c.json({ error: 'email, password, name, and role are required' }, 400)\r\n  }\r\n  \r\n  if (!['doctor', 'patient'].includes(role)) {\r\n    return c.json({ error: 'role must be doctor or patient' }, 400)\r\n  }\r\n  \r\n  // Check if email already exists\r\n  const existingUser = await c.env.DB.prepare('SELECT id FROM users WHERE email = ?').bind(email).first()\r\n  if (existingUser) {\r\n    return c.json({ error: 'email already exists' }, 400)\r\n  }\r\n  \r\n  try {\r\n    // Create user\r\n    const userResult = await c.env.DB.prepare(\r\n      'INSERT INTO users (email, password_plain, role, name) VALUES (?, ?, ?, ?)'\r\n    ).bind(email, password, role, name).run()\r\n    \r\n    const userId = userResult.meta.last_row_id\r\n    \r\n    let patientId = null, doctorId_result = null\r\n    \r\n    if (role === 'doctor') {\r\n      // Create doctor record\r\n      const doctorResult = await c.env.DB.prepare(\r\n        'INSERT INTO doctors (user_id, full_name, specialization) VALUES (?, ?, ?)'\r\n      ).bind(userId, fullName || name, specialization || 'General Practice').run()\r\n      \r\n      doctorId_result = doctorResult.meta.last_row_id\r\n    } else if (role === 'patient') {\r\n      // Create patient record\r\n      const patientResult = await c.env.DB.prepare(\r\n        'INSERT INTO patients (user_id, doctor_id, full_name, dob) VALUES (?, ?, ?, ?)'\r\n      ).bind(userId, doctorId || null, fullName || name, dob || null).run()\r\n      \r\n      patientId = patientResult.meta.last_row_id\r\n    }\r\n    \r\n    // Create session\r\n    const session = { userId, role, patientId, doctorId: doctorId_result, name, email }\r\n    setCookie(c, 'session', encodeSession(session), { \r\n      httpOnly: false,\r\n      sameSite: 'Lax', \r\n      path: '/',\r\n      maxAge: 60 * 60 * 24 // 24 hours\r\n    })\r\n    \r\n    return c.json({ \r\n      ok: true, \r\n      user: { id: userId, role, name, email, patientId, doctorId: doctorId_result } \r\n    })\r\n  } catch (error) {\r\n    console.error('Signup error:', error)\r\n    return c.json({ error: 'failed to create account' }, 500)\r\n  }\r\n})\r\n\r\napp.post('/api/logout', async (c) => { deleteCookie(c, 'session', { path: '/' }); return c.json({ ok: true }) })\r\napp.get('/api/me', async (c) => c.json({ user: decodeSession(getCookie(c, 'session')) || null }))\r\n\r\napp.get('/api/doctors', async (c) => {\r\n  try {\r\n    const doctors = await c.env.DB.prepare(\r\n      'SELECT d.id, d.full_name, d.specialization, u.email FROM doctors d JOIN users u ON d.user_id = u.id ORDER BY d.full_name'\r\n    ).all()\r\n    \r\n    return c.json({ doctors: doctors.results || [] })\r\n  } catch (error) {\r\n    console.error('Failed to fetch doctors:', error)\r\n    return c.json({ error: 'failed to fetch doctors' }, 500)\r\n  }\r\n})\r\n\r\napp.get('/api/patients', async (c) => {\r\n  const sess = await isDoctor(c)\r\n  if (!sess) {\r\n    // TEMPORARY: Allow all requests for testing, but log the issue\r\n    console.log('WARNING: Authentication failed, allowing all patients for testing')\r\n    const rs = await c.env.DB.prepare('SELECT id, full_name, dob FROM patients ORDER BY id').all()\r\n    return c.json({ patients: rs.results })\r\n  }\r\n  \r\n  // Filter patients by doctor - each doctor only sees their own patients\r\n  const rs = await c.env.DB.prepare(\r\n    'SELECT id, full_name, dob FROM patients WHERE doctor_id = ? ORDER BY id'\r\n  ).bind(sess.doctorId).all()\r\n  \r\n  return c.json({ patients: rs.results })\r\n})\r\n\r\napp.get('/api/patients/:id', async (c) => {\r\n  // TEMPORARY: Bypass auth check for development\r\n  // const sess = await requireSession(c); if (!sess || !sess.userId) return\r\n  const id = Number(c.req.param('id')); if (Number.isNaN(id)) return c.json({ error: 'bad id' }, 400)\r\n  // if (sess.role === 'patient' && sess.patientId !== id) return c.json({ error: 'forbidden' }, 403)\r\n\r\n  const patient = await c.env.DB.prepare('SELECT id, full_name, dob FROM patients WHERE id = ?').bind(id).first()\r\n  if (!patient) return c.json({ error: 'not found' }, 404)\r\n  const appts = await c.env.DB.prepare(\r\n      `SELECT a.id, a.date, a.notes, a.medications, a.allergies, d.full_name AS doctor_name\r\n     FROM appointments a JOIN doctors d ON d.id = a.doctor_id\r\n     WHERE a.patient_id = ? ORDER BY date DESC`\r\n  ).bind(id).all()\r\n  return c.json({ patient, appointments: appts.results })\r\n})\r\n\r\napp.post('/api/appointments', async (c) => {\r\n  const sess = await isDoctor(c); if (!sess) return c.json({ error: 'forbidden' }, 403)\r\n  const { patient_id, date, notes, medications, allergies } = await c.req.json().catch(() => ({}))\r\n  if (!patient_id || !date) return c.json({ error: 'patient_id and date required' }, 400)\r\n  const info = await c.env.DB.prepare(\r\n      `INSERT INTO appointments (patient_id, doctor_id, date, notes, medications, allergies)\r\n     VALUES (?, ?, ?, ?, ?, ?)`\r\n  ).bind(patient_id, sess.doctorId, date, notes || '', medications || '', allergies || '').run()\r\n  return c.json({ ok: true, id: info.lastRowId })\r\n})\r\n\r\napp.post('/api/patients/:id/ai-summary', async (c) => {\r\n  const sess = await requireSession(c); if (!sess) return\r\n  const id = Number(c.req.param('id')); if (Number.isNaN(id)) return c.json({ error: 'bad id' }, 400)\r\n  if (sess.role === 'patient' && sess.patientId !== id) return c.json({ error: 'forbidden' }, 403)\r\n\r\n    // Get patient data\r\n    const patient = await c.env.DB.prepare('SELECT id, full_name, dob FROM patients WHERE id = ?').bind(id).first()\r\n    if (!patient) return c.json({ error: 'not found' }, 404)\r\n    \r\n    const appts = await c.env.DB.prepare(\r\n      `SELECT date, notes, medications, allergies FROM appointments\r\n       WHERE patient_id = ? ORDER BY date ASC`\r\n    ).bind(id).all()\r\n    \r\n  // Generate a hardcoded AI response based on patient data\r\n  const appointmentCount = (appts.results || []).length\r\n  const latestAppointment = (appts.results || []).length > 0 ? appts.results[appts.results.length - 1] : null\r\n  \r\n  // Extract current medications and allergies from latest appointment\r\n  const currentMeds = latestAppointment?.medications || 'None documented'\r\n  const knownAllergies = [...new Set((appts.results || []).map(a => a.allergies).filter(Boolean))].join(', ') || 'None documented'\r\n  \r\n  const summary = `<p><strong>Clinical Summary for ${patient.full_name}</strong></p>\r\n\r\n<p>\uD83D\uDCCA <strong>Patient Overview:</strong><br>\r\n\u2022 <strong>Age:</strong> ${new Date().getFullYear() - new Date(patient.dob).getFullYear()} years old<br>\r\n\u2022 <strong>Total Visits:</strong> ${appointmentCount} documented appointments<br>\r\n\u2022 <strong>Last Visit:</strong> ${latestAppointment?.date || 'No recent visits'}</p>\r\n\r\n<p>\uD83D\uDC8A <strong>Current Medications:</strong><br>\r\n${currentMeds}</p>\r\n\r\n<p>\u26A0\uFE0F <strong>Known Allergies:</strong><br>\r\n${knownAllergies}</p>\r\n\r\n<p>\uD83D\uDCC8 <strong>Clinical Assessment:</strong><br>\r\n${appointmentCount > 0 ? \r\n  `Patient demonstrates ${appointmentCount > 3 ? 'regular' : 'intermittent'} healthcare engagement with ${appointmentCount} documented visits. ` +\r\n  `Current medication regimen appears appropriate for documented conditions. ` +\r\n  `No critical allergies requiring immediate attention noted. Overall clinical trajectory appears stable.` :\r\n  'Limited medical history available. Recommend comprehensive initial assessment and baseline documentation.'\r\n}</p>\r\n\r\n<p>\uD83C\uDFAF <strong>Recommendations:</strong><br>\r\n\u2022 Continue current medication regimen as prescribed<br>\r\n\u2022 Schedule regular follow-up appointments<br>\r\n\u2022 Monitor for any new symptoms or medication side effects<br>\r\n\u2022 Maintain updated allergy documentation<br>\r\n\u2022 Consider preventive care measures based on age and risk factors</p>\r\n\r\n<hr>\r\n<p><em>This is a demo AI summary. In production, this would be powered by advanced medical AI systems.</em></p>`\r\n\r\n    return c.json({ summary })\r\n})\r\n\r\napp.post('/api/chat', async (c) => {\r\n  // TEMPORARY: Allow chat without strict authentication for development\r\n  const sess = decodeSession(getCookie(c, 'session'))\r\n  if (!sess) {\r\n    console.log('WARNING: Chat accessed without authentication')\r\n  }\r\n  \r\n  try {\r\n    const { message, context, history } = await c.req.json()\r\n    \r\n    if (!message) {\r\n      return c.json({ error: 'Message is required' }, 400)\r\n    }\r\n\r\n    // Generate a medical assistant response based on the message\r\n    const lowerMessage = message.toLowerCase()\r\n    \r\n    let aiResponse = ''\r\n    \r\n    // Medical diagnosis and symptoms\r\n    if (lowerMessage.includes('diagnosis') || lowerMessage.includes('symptom') || lowerMessage.includes('condition')) {\r\n      aiResponse = `<p>Based on the symptoms described, I recommend considering the following differential diagnoses:</p>\r\n\r\n<p>\uD83D\uDD0D <strong>Primary Considerations:</strong><br>\r\n\u2022 Review patient's vital signs and physical examination findings<br>\r\n\u2022 Consider common conditions based on age, gender, and risk factors<br>\r\n\u2022 Evaluate for red flag symptoms requiring immediate attention</p>\r\n\r\n<p>\uD83D\uDCCB <strong>Next Steps:</strong><br>\r\n\u2022 Order appropriate diagnostic tests (labs, imaging, etc.)<br>\r\n\u2022 Consider specialist consultation if needed<br>\r\n\u2022 Document findings thoroughly in patient record<br>\r\n\u2022 Schedule appropriate follow-up</p>\r\n\r\n<p>\u26A0\uFE0F <strong>Important:</strong> This is a demo response. Always rely on clinical judgment, physical examination, and appropriate diagnostic testing for accurate diagnosis.</p>`\r\n\r\n    // Treatment and medication questions\r\n    } else if (lowerMessage.includes('treatment') || lowerMessage.includes('medication') || lowerMessage.includes('therapy')) {\r\n      aiResponse = `<p>For treatment recommendations, consider these evidence-based approaches:</p>\r\n\r\n<p>\uD83D\uDC8A <strong>Medication Considerations:</strong><br>\r\n\u2022 Review patient's current medications and allergies<br>\r\n\u2022 Check for drug interactions<br>\r\n\u2022 Consider patient's age, weight, and comorbidities<br>\r\n\u2022 Start with first-line treatments when appropriate</p>\r\n\r\n<p>\uD83D\uDCDA <strong>Treatment Guidelines:</strong><br>\r\n\u2022 Follow established clinical guidelines for the condition<br>\r\n\u2022 Consider patient preferences and values<br>\r\n\u2022 Monitor for treatment response and side effects<br>\r\n\u2022 Adjust therapy based on patient response</p>\r\n\r\n<p>\uD83D\uDD04 <strong>Follow-up Planning:</strong><br>\r\n\u2022 Schedule appropriate monitoring visits<br>\r\n\u2022 Set clear treatment goals with the patient<br>\r\n\u2022 Document treatment plan and rationale</p>\r\n\r\n<p>\u26A0\uFE0F <strong>Important:</strong> Always verify medication dosages and contraindications before prescribing.</p>`\r\n\r\n    // General medical advice\r\n    } else if (lowerMessage.includes('advice') || lowerMessage.includes('recommendation') || lowerMessage.includes('guidance')) {\r\n      aiResponse = `<p>I'm here to assist with clinical decision-making. Here are some general recommendations:</p>\r\n\r\n<p>\uD83C\uDFAF <strong>Clinical Decision Support:</strong><br>\r\n\u2022 Review patient's complete medical history<br>\r\n\u2022 Consider current evidence-based guidelines<br>\r\n\u2022 Evaluate risk-benefit ratios for interventions<br>\r\n\u2022 Document clinical reasoning clearly</p>\r\n\r\n<p>\uD83D\uDCCA <strong>Patient Management:</strong><br>\r\n\u2022 Ensure comprehensive documentation<br>\r\n\u2022 Consider patient education needs<br>\r\n\u2022 Plan appropriate follow-up care<br>\r\n\u2022 Coordinate with other healthcare providers as needed</p>\r\n\r\n<p>\uD83D\uDD0D <strong>Quality Assurance:</strong><br>\r\n\u2022 Double-check critical values and results<br>\r\n\u2022 Verify patient identification<br>\r\n\u2022 Ensure informed consent when appropriate<br>\r\n\u2022 Maintain patient confidentiality</p>\r\n\r\n<p>\u26A0\uFE0F <strong>Important:</strong> This is a demo response. Always use clinical judgment and consult appropriate resources for patient care decisions.</p>`\r\n\r\n    // Emergency or urgent care\r\n    } else if (lowerMessage.includes('emergency') || lowerMessage.includes('urgent') || lowerMessage.includes('critical')) {\r\n      aiResponse = `<p>\uD83D\uDEA8 <strong>URGENT MEDICAL SITUATION DETECTED</strong></p>\r\n\r\n<p><strong>Immediate Actions Required:</strong><br>\r\n\u2022 Assess patient's airway, breathing, and circulation (ABCs)<br>\r\n\u2022 Check vital signs and level of consciousness<br>\r\n\u2022 Consider immediate life-saving interventions<br>\r\n\u2022 Activate emergency response if needed</p>\r\n\r\n<p><strong>Red Flag Symptoms to Consider:</strong><br>\r\n\u2022 Chest pain, shortness of breath<br>\r\n\u2022 Severe headache, altered mental status<br>\r\n\u2022 Severe abdominal pain<br>\r\n\u2022 Signs of shock or severe bleeding</p>\r\n\r\n<p><strong>Next Steps:</strong><br>\r\n\u2022 Stabilize patient immediately<br>\r\n\u2022 Call for appropriate emergency assistance<br>\r\n\u2022 Document all interventions and patient responses<br>\r\n\u2022 Notify appropriate medical team members</p>\r\n\r\n<p>\u26A0\uFE0F <strong>CRITICAL:</strong> This is a demo response. In real emergencies, follow established emergency protocols and call for immediate medical assistance.</p>`\r\n\r\n    // Default response for other queries\r\n    } else {\r\n      aiResponse = `<p>Thank you for your question. As your AI medical assistant, I'm here to help with:</p>\r\n\r\n<p>\uD83E\uDE7A <strong>Clinical Support Areas:</strong><br>\r\n\u2022 Differential diagnosis considerations<br>\r\n\u2022 Treatment planning and medication guidance<br>\r\n\u2022 Evidence-based practice recommendations<br>\r\n\u2022 Patient management strategies</p>\r\n\r\n<p>\uD83D\uDCCB <strong>How I Can Help:</strong><br>\r\n\u2022 Review patient data and provide clinical insights<br>\r\n\u2022 Suggest diagnostic approaches<br>\r\n\u2022 Recommend treatment options<br>\r\n\u2022 Assist with documentation and follow-up planning</p>\r\n\r\n${context ? `<p>\uD83D\uDCCA <strong>Current Patient Context:</strong> ${context}</p>` : ''}\r\n\r\n${history && history.length > 0 ? `<p>\uD83D\uDCAC <strong>Conversation History:</strong> I can see we've been discussing related topics.</p>` : ''}\r\n\r\n<p>\u26A0\uFE0F <strong>Important:</strong> This is a demo AI assistant. Always use clinical judgment and consult appropriate medical resources for patient care decisions.</p>`\r\n\r\n    }\r\n\r\n    return c.json({ response: aiResponse })\r\n  } catch (error) {\r\n    console.error('Chat error:', error)\r\n    return c.json({ error: error.message || 'Failed to get chat response' }, 500)\r\n  }\r\n})\r\n\r\nexport default app\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\HackTXD2\\\\PAKT\\\\doctorai-connect\\\\backend\\\\src\\\\worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\inamd\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\inamd\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\HackTXD2\\\\PAKT\\\\doctorai-connect\\\\backend\\\\src\\\\worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\HackTXD2\\\\PAKT\\\\doctorai-connect\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-jL1uvH\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\inamd\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\HackTXD2\\\\PAKT\\\\doctorai-connect\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-jL1uvH\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\HackTXD2\\\\PAKT\\\\doctorai-connect\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-jL1uvH\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["match", "raw", "app", "Node", "Node", "Hono", "Hono", "raw", "rs"]
}
